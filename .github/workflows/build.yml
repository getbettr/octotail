name: build

on:
  push:
    branches:
      - ci
      - dev
      - "!main"

permissions:
  contents: write

jobs:
  get-versions:
    name: get-versions
    runs-on: arc-octotail
    steps:
      - uses: actions/checkout@v4
      - name: Grab the version from __init__.py
        env:
          TEST_PYPI_SUFFIX: "a9"
        shell: bash
        run: |
          version="$(head -n5 octotail/__init__.py | grep -oE "__version__ = \"[0-9\.]+\"" | cut -d'"' -f2)"
          echo "VERSION=$version" >> $GITHUB_ENV
          echo "TEST_VERSION=${version}${TEST_PYPI_SUFFIX}" >> $GITHUB_ENV
    outputs:
      version: ${{ env.VERSION }}
      test_version: ${{ env.TEST_VERSION }}

  smoke-test:
    name: smoke-test
    runs-on: arc-octotail
    steps:
      - uses: actions/checkout@v4
      - name: Has uv
        id: has_uv
        run: |
          if command -v uv &> /dev/null; then
            echo "result=true" >> $GITHUB_OUTPUT
          else
            echo "result=false" >> $GITHUB_OUTPUT
          fi
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        if: ${{ steps.has_uv.outputs.result == 'false' }}
      - name: Setup project with uv
        run: |
          uv python find 3.12 || uv python install 3.12
          uv venv
          uv sync --link-mode=copy
      - name: Run pycheck-parallel
        run: |
          source .venv/bin/activate
          ./hacks/pycheck-parallel
      - name: Run unit tests
        run: |
          source .venv/bin/activate
          pytest tests --cov
      - name: Run the entrypoints
        run: |
          source .venv/bin/activate
          octotail --help
          octotailx --help

  e2e-test:
    name: e2e-test
    runs-on: arc-octotail
    steps:
      - uses: actions/checkout@v4
      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Dockerized tests
        run: |
          docker run --rm -u 1000:1000 -v $(pwd)/e2e:/repo \
            -e HUBBER_CREDS="${{ secrets.HUBBER_CREDS }}" \
            -e HUBBER_KEY="${{ secrets.HUBBER_KEY }}" \
            ghcr.io/rarescosma/octotail-e2e:latest ./run.sh $GITHUB_SHA

  publish-wheels:
    name: publish-wheels
    needs: [ "get-versions", "smoke-test", "e2e-test" ]
    runs-on: arc-octotail
    steps:
      - uses: actions/checkout@v4
      - name: Has uv
        id: has_uv
        run: |
          if command -v uv &> /dev/null; then
            echo "result=true" >> $GITHUB_OUTPUT
          else
            echo "result=false" >> $GITHUB_OUTPUT
          fi
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        if: ${{ steps.has_uv.outputs.result == 'false' }}
      - name: Setup project with uv
        run: |
          uv python find 3.12 || uv python install 3.12
          uv venv
      - name: Build wheels
        shell: bash
        run: |
          test_version="${{ needs.get-versions.outputs.test_version }}"
          uv build
          echo "__version__ = '${test_version}'" > octotail/__init__.py
          uv build
      - name: Test executables in isolation
        run: |
          version="${{ needs.get-versions.outputs.version }}"
          test_version="${{ needs.get-versions.outputs.test_version }}"
          uvx --find-links=./dist --isolated --no-cache \
            --from=octotail==${test_version} octotail --help
          uvx --find-links=./dist --isolated --no-cache \
            --from=octotail==${test_version} octotailx --help
          uvx --find-links=./dist --isolated --no-cache \
            --from=octotail==${version} octotail --help
          uvx --find-links=./dist --isolated --no-cache \
            --from=octotail==${version} octotailx --help
      - name: Publish to test.pypi
        if: "github.ref == 'refs/heads/ci' && !contains(github.event.head_commit.message, '[cron]')"
        env:
          TEST_PYPI_TOKEN: ${{ secrets.TEST_PYPI_TOKEN }}
        run: |
          test_version="${{ needs.get-versions.outputs.test_version }}"
          uv publish --publish-url https://test.pypi.org/legacy/ --username=__token__ --password="$TEST_PYPI_TOKEN" "dist/*-${test_version}*"
      - name: Publish to pypi
        if: "github.ref == 'refs/heads/ci' && !contains(github.event.head_commit.message, '[cron]')"
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          version="${{ needs.get-versions.outputs.version }}"
          test_version="${{ needs.get-versions.outputs.test_version }}"
          git checkout octotail/__init__.py
          find ./dist -name "*-${test_version}*" -delete
          uv publish --username=__token__ --password="$PYPI_TOKEN" "dist/*-${version}*"

  promote-release:
    if: "github.ref == 'refs/heads/ci' && !contains(github.event.head_commit.message, '[cron]')"
    name: promote-release
    needs: [ "publish-wheels", "get-versions" ]
    runs-on: arc-octotail
    steps:
      - uses: actions/checkout@v4
      - name: Promote release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          version="${{ needs.get-versions.outputs.version }}"
          gh release edit "v${version}" --draft=false --latest
